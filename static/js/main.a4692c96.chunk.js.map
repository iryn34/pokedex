{"version":3,"sources":["components/Title/styles.module.scss","components/Spinner/styles.module.scss","components/Title/index.jsx","components/Spinner/index.jsx","lib/PokemonAPIClient.js","lib/utils.js","components/PokemonItem/index.jsx","components/PokemonList/index.jsx","components/LoadMoreButton/index.jsx","components/PokemonSearch/index.jsx","components/PokemonListSection/index.jsx","components/PokemonDetailsCard/index.jsx","pages/PokedexPage/index.jsx","App.js","serviceWorker.js","index.js","components/PokemonItem/styles.module.scss","components/PokemonSearch/styles.module.scss","components/PokemonDetailsCard/styles.module.scss","components/LoadMoreButton/styles.module.scss"],"names":["module","exports","title","spinner","Title","react_default","a","createElement","className","styles","React","Component","PokemonItem","CircularProgress_default","PokemonAPIClient","limit","offset","axios","get","concat","params","id","type","upperCaseFirstLetter","str","charAt","toUpperCase","slice","extractIDFromPokemonUrl","url","fragments","split","length","state","avatar","name","types","isLoading","_this2","this","getPokemonByID","props","then","response","setState","data","sprites","front_default","_this$state","_this$props","onItemClick","Spinner","Card_default","card","onClick","Avatar_default","src","map","typeObj","index","Chip_default","key","chip","label","color","variant","PokemonList","pokemons","Grid_default","container","spacing","pokemon","xs","sm","md","item","components_PokemonItem","LoadMoreButton","disabled","buttonWrapper","Button_default","button","PokemonSearch","typeValue","handleChange","event","_this","target","value","onDefaultClick","form","TextField_default","textField","margin","onChange","DEFAULT_LIMIT","PokemonListSection","isButtonDisabled","openSnackbar","filteredPokemons","undefined","handleLoadMoreClick","Object","toConsumableArray","getPokemonList","results","count","handleSearchClick","getPokemonsByType","toLowerCase","onSearchClick","catch","error","handleDefaultClick","toggleSnackbarClick","renderSnackbar","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","message","Fragment","components_PokemonSearch","components_PokemonList","components_LoadMoreButton","PokemonDetailsCard","_this3","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","renderStats","renderWeight","renderTotalMoves","stats","statObj","stat","component","scope","base_stat","weight","moves","Table_default","renderTableHeader","renderTableBody","PokedexPage","handleItemClick","closeDrawer","components_Title","isMobile","SwipeableDrawer_default","onOpen","components_PokemonDetailsCard","components_PokemonListSection","withSizes","_ref","width","App","pages_PokedexPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","pokemonList"],"mappings":"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","file":"static/js/main.a4692c96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__7DKQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"styles_spinner__3cwmT\"};","import React from 'react';\nimport styles from './styles.module.scss';\n\nclass Title extends React.Component {\n    render() {\n        return <div className={styles.title}>Pokedex</div>;\n    }\n}\n\nexport default Title;","import React from 'react';\n\nimport styles from './styles.module.scss';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass PokemonItem extends React.Component {\n  render() {\n    return (\n      <div className={styles.spinner}>\n        <CircularProgress />\n      </div>\n    );\n  }\n}\n\nexport default PokemonItem;\n","import axios from 'axios';\n\nconst POKEMON_API_URL = 'https://pokeapi.co/api/v2/';\n\nclass PokemonAPIClient {\n  static getPokemonList(limit, offset) {\n    return axios.get(`${POKEMON_API_URL}pokemon/`, {\n      params: {\n        limit,\n        offset,\n      }\n    });\n  }\n\n  static getPokemonByID(id) {\n    return axios.get(`${POKEMON_API_URL}pokemon/${id}/`);\n  }\n\n  static getPokemonsByType(type) {\n    return axios.get(`${POKEMON_API_URL}type/${type}/`);\n  }\n}\n\nexport default PokemonAPIClient;","export function upperCaseFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function extractIDFromPokemonUrl(url) {\n  const fragments = url.split('/');\n\n  return fragments[fragments.length - 2];\n}\n\n\n// + 1. Коли тип не знайдено, відобразити снекбар \n// + 2. Кнопка для дефолтних покемонів\n// + 3. Колір для чіпів \n// + 4. Типи в чіпах з великої літери\n// 5. Дефолтна аватарка\n// 6. PropTypes\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\n\nimport Spinner from '../Spinner';\nimport PokemonAPIClient from '../../lib/PokemonAPIClient';\nimport { upperCaseFirstLetter } from '../../lib/utils';\n\nimport styles from './styles.module.scss';\n\nclass PokemonItem extends React.Component {\n  state = {\n    avatar: '',\n    name: '',\n    types: [],\n    isLoading: true\n  };\n\n  componentDidMount() {\n    PokemonAPIClient.getPokemonByID(this.props.id)\n      .then(response => (\n        this.setState({\n          avatar: response.data.sprites.front_default,\n          name: response.data.name,\n          types: response.data.types,\n          isLoading: false,\n        })\n      ));\n  }\n\n  render() {\n    const { avatar, name, types, isLoading } = this.state;\n    const { id, onItemClick } = this.props;\n\n    if (isLoading) {\n      return <Spinner />;\n    }\n\n    return (\n        <Card\n          className={styles.card} \n          onClick={() => onItemClick(id)}\n        >\n          <Avatar\n            className={styles.avatar}\n            src={avatar} \n          />\n\n          <h3 className={styles.name}>\n            {upperCaseFirstLetter(name)}\n          </h3>\n          \n          {types.map((typeObj, index) => (\n            <Chip \n              key={index} \n              className={styles.chip} \n              label={upperCaseFirstLetter(typeObj.type.name)} \n              color='primary'\n              variant='outlined'\n            />\n          ))}\n        </Card>\n    );\n  }\n}\n\nexport default PokemonItem;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport PokemonItem from '../PokemonItem';\nimport { extractIDFromPokemonUrl } from '../../lib/utils';\n\nclass PokemonList extends React.Component {\n  render() {\n    const { pokemons, onItemClick } = this.props;\n\n    return (\n      <Grid container spacing={24}>\n        {pokemons.map(pokemon => (\n          <Grid key={pokemon.name} xs={12} sm={6} md={4} item>\n            <PokemonItem\n              id={extractIDFromPokemonUrl(pokemon.url)}\n              onItemClick={onItemClick}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    );\n  }\n}\n\nexport default PokemonList;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nimport styles from './styles.module.scss';\n\nclass LoadMoreButton extends React.Component {\n  render() {\n    const { disabled, onClick } = this.props;\n\n    return (\n      <Grid container>\n        <Grid xs={12} item>\n          <div className={styles.buttonWrapper}>\n            <Button\n              className={styles.button}\n              disabled={disabled}\n              variant=\"contained\" \n              color=\"primary\" \n              onClick={onClick}\n            >\n              Load More\n            </Button>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default LoadMoreButton;","import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport styles from './styles.module.scss';\n\nclass PokemonSearch extends React.Component {\n  state = {\n    typeValue: '',\n  };\n\n  handleChange = event => {\n    this.setState({\n      typeValue: event.target.value\n    });\n  }\n\n  render() {\n    const { typeValue } = this.state;\n    const { onClick, onDefaultClick } = this.props;\n\n    return (\n      <div className={styles.form}>\n        <TextField\n          id=\"outlined-search\"\n          type=\"search\"\n          className={styles.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n          value={typeValue}\n          onChange={this.handleChange}\n        />\n\n        <Button\n          className={styles.button}\n          variant=\"contained\" \n          color=\"primary\" \n          onClick={() => onClick(typeValue)}            \n        >\n          Search pokemons by type\n        </Button>\n\n        <Button\n          className={styles.button}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => {\n            this.setState({typeValue: ''});\n            onDefaultClick();\n          }}            \n        >\n          Default pokemons\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default PokemonSearch;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport PokemonList from '../PokemonList';\nimport LoadMoreButton from '../LoadMoreButton';\nimport PokemonSearch from '../PokemonSearch';\nimport PokemonAPIClient from '../../lib/PokemonAPIClient';\nimport { extractIDFromPokemonUrl } from '../../lib/utils';\n\nconst DEFAULT_LIMIT = 12;\n\nclass PokemonListSection extends React.Component {\n  state = {\n    pokemons: [],\n    offset: 0,\n    isButtonDisabled: false,\n    openSnackbar: false,\n  };\n\n  filteredPokemons = undefined;\n\n  componentDidMount() {\n    PokemonAPIClient.getPokemonList(DEFAULT_LIMIT, this.state.offset)\n      .then(response => (\n        this.setState(state => ({\n          pokemons: response.data.results,\n          offset: state.offset + DEFAULT_LIMIT,\n        }))\n      ));\n  }\n\n  handleLoadMoreClick = () => {\n    if (this.filteredPokemons) {\n      this.setState(state => ({\n        pokemons: [\n          ...state.pokemons, \n          ...this.filteredPokemons.slice(state.offset, state.offset + DEFAULT_LIMIT)\n        ],\n        offset: state.offset + DEFAULT_LIMIT,\n        isButtonDisabled: state.offset + DEFAULT_LIMIT > this.filteredPokemons.length,\n      }));\n    } else {\n      PokemonAPIClient.getPokemonList(DEFAULT_LIMIT, this.state.offset)\n      .then(response => (\n        this.setState(state => ({\n          pokemons: [...state.pokemons, ...response.data.results],\n          offset: state.offset + DEFAULT_LIMIT,\n          isButtonDisabled: state.offset + DEFAULT_LIMIT > response.data.count,\n        }))\n      ));\n    }\n  }\n\n  handleSearchClick = type => {\n    PokemonAPIClient.getPokemonsByType(type.toLowerCase())\n      .then(response => {\n        this.filteredPokemons = response.data.pokemon.map(pokemon => pokemon.pokemon);\n        this.setState({\n          pokemons: this.filteredPokemons.slice(0, DEFAULT_LIMIT),\n          offset: DEFAULT_LIMIT,\n        }, () => {\n          this.props.onSearchClick(extractIDFromPokemonUrl(this.state.pokemons[0].url));\n        });\n      })\n      .catch(error => {\n        this.setState({\n          openSnackbar: true,\n        });\n      });\n  };\n\n  handleDefaultClick = type => {\n    PokemonAPIClient.getPokemonList(DEFAULT_LIMIT, 0)\n      .then(response => (\n        this.setState({\n          pokemons: response.data.results,\n          offset: DEFAULT_LIMIT,\n        }, () => {\n          this.props.onSearchClick(extractIDFromPokemonUrl(this.state.pokemons[0].url));\n        })\n      ));\n  }; \n\n  toggleSnackbarClick = () => {\n    this.setState(state => ({\n      openSnackbar: !state.openSnackbar,\n    }));\n  };\n\n  renderSnackbar = () => {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        open={this.state.openSnackbar}\n        autoHideDuration={6000}\n        onClose={this.toggleSnackbarClick}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={\n          <span id=\"message-id\">\n            Oops! There are no pokemons with such type.\n          </span>\n        }\n      />\n    );\n  };\n\n  render() {\n    const { pokemons, offset, isButtonDisabled } = this.state;\n    const { onItemClick } = this.props;\n\n    return (\n      <>\n        <Grid container>\n          <Grid xs={2} sm={1} item />\n\n          <Grid xs={8} sm={10} item>\n            <PokemonSearch \n              onClick={this.handleSearchClick}\n              onDefaultClick={this.handleDefaultClick}\n            />\n\n            <PokemonList \n              pokemons={pokemons}\n              onItemClick={onItemClick}\n            />\n\n            <LoadMoreButton\n              offset={offset}\n              disabled={isButtonDisabled}\n              onClick={this.handleLoadMoreClick}\n            />\n          </Grid>\n\n          <Grid xs={2} sm={1} item />\n        </Grid>\n        {this.renderSnackbar()}\n      </>\n    );\n  }\n}\n\nexport default PokemonListSection;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Spinner from '../Spinner';\nimport PokemonAPIClient from '../../lib/PokemonAPIClient';\nimport { upperCaseFirstLetter } from '../../lib/utils';\n\nimport styles from './styles.module.scss';\n\nclass PokemonDetailsCard extends React.Component {\n  state = {\n    pokemon: {},\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    PokemonAPIClient.getPokemonByID(this.props.id)\n      .then(response => {\n        this.setState({\n          pokemon: response.data,\n          isLoading: false,\n        });\n      });\n  }\n\n  componentDidUpdate() {\n    PokemonAPIClient.getPokemonByID(this.props.id)\n      .then(response => {\n        this.setState({\n          pokemon: response.data,\n          isLoading: false,\n        });\n      });\n  }\n\n  renderTableHeader() {\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell>Type</TableCell>\n          <TableCell align=\"right\">Fire</TableCell>\n        </TableRow>\n      </TableHead>\n    );\n  }\n\n  renderTableBody() {\n    const { pokemon } = this.state;\n\n    return (\n      <TableBody>\n        {this.renderStats(pokemon)}\n        {this.renderWeight(pokemon)}\n        {this.renderTotalMoves(pokemon)}\n      </TableBody>\n    );\n  }\n\n  renderStats(pokemon) {\n    return pokemon.stats.map(statObj => {\n      return (\n        <TableRow key={statObj.stat.url}>\n          <TableCell component=\"th\" scope=\"row\">\n            {upperCaseFirstLetter(statObj.stat.name)}\n          </TableCell>\n          <TableCell align=\"right\">{statObj.base_stat}</TableCell>\n        </TableRow>\n      );\n    });\n  }\n\n  renderWeight(pokemon) {\n    return (\n      <TableRow>\n        <TableCell component=\"th\" scope=\"row\">\n          Weight\n        </TableCell>\n        <TableCell align=\"right\">{pokemon.weight}</TableCell>\n      </TableRow>\n    );\n  }\n\n  renderTotalMoves(pokemon) {\n    return (\n      <TableRow>\n        <TableCell component=\"th\" scope=\"row\">\n          Total moves\n        </TableCell>\n        <TableCell align=\"right\">{pokemon.moves.length}</TableCell>\n      </TableRow>\n    );\n  }\n\n  render() {\n    const { pokemon, isLoading } = this.state;\n\n    if (isLoading) {\n      return <Spinner />;\n    }\n\n    return (\n      <Grid container>\n        {/* <Grid xs={0} sm={2} item /> */}\n\n        <Grid sm={11} item>\n          <Card className={styles.card}>\n            <Avatar \n              className={styles.avatar}\n              src={pokemon.sprites.front_default} \n            />\n\n            <h3 className={styles.name}>\n              {upperCaseFirstLetter(pokemon.name)}\n            </h3>\n\n            <Table>\n              {this.renderTableHeader()}\n              {this.renderTableBody()}\n            </Table>\n          </Card>\n        </Grid>\n\n        <Grid sm={1} item />\n      </Grid>\n    );\n  }\n}\n\nexport default PokemonDetailsCard;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport withSizes from 'react-sizes';\n\nimport Title from '../../components/Title';\nimport PokemonListSection from '../../components/PokemonListSection';\nimport PokemonDetailsCard from '../../components/PokemonDetailsCard';\n// import styles from './styles.module.scss';\n\nclass PokedexPage extends React.Component {\n  state = {\n    id: 1,\n    open: false,\n  };\n\n  handleItemClick = id => {\n    this.setState(state => ({ \n      id,\n      open: !state.open\n     }));\n  };\n\n  handleSearchClick = id => {\n    this.setState({ id });\n  };\n\n  closeDrawer = () => {\n    this.setState({\n      open: false\n    });\n  };\n\n  render() {\n    const { id } = this.state;\n    \n    return (\n      <>\n        <Title />\n\n        {this.props.isMobile && (\n          <SwipeableDrawer\n            open={this.state.open}\n            onClick={this.closeDrawer}\n            onOpen={() => {}}\n            onClose={() => {}}\n          >\n            <PokemonDetailsCard \n              id={id} \n            />\n          </SwipeableDrawer>\n        )}\n\n        <Grid container>\n          <Grid xs={12} sm={8} item>\n            <PokemonListSection \n              onSearchClick={this.handleSearchClick}\n              onItemClick={this.handleItemClick} \n            />\n          </Grid>\n\n          {!this.props.isMobile && (\n            <Grid sm={4} item>\n              <PokemonDetailsCard id={id} />\n            </Grid>\n          )}\n        </Grid>\n      </>\n    );\n  }\n}\n\nconst mapSizesToProps = ({ width }) => ({\n  isMobile: width < 600,\n})\n\nexport default withSizes(mapSizesToProps)(PokedexPage);\n","import React from 'react';\n\nimport PokedexPage from './pages/PokedexPage';\n\nconst App = () => <PokedexPage />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__1AD5g\",\"avatar\":\"styles_avatar__26M8e\",\"chip\":\"styles_chip__2SjkH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__1DvBY\",\"button\":\"styles_button__27Zk4\",\"textField\":\"styles_textField__3ok5V\",\"pokemonList\":\"styles_pokemonList__a7f1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"styles_avatar__1Eys0\",\"name\":\"styles_name__rRAnT\",\"card\":\"styles_card__3G9AG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__2dN2y\",\"buttonWrapper\":\"styles_buttonWrapper__2xxwX\"};"],"sourceRoot":""}