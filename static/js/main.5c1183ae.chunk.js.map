{"version":3,"sources":["components/Title/styles.module.scss","components/Spinner/styles.module.scss","components/Title/index.jsx","components/Spinner/index.jsx","lib/PokemonAPIClient.js","lib/utils.js","components/PokemonItem/index.jsx","components/PokemonList/index.jsx","components/LoadMoreButton/index.jsx","components/PokemonSearch/index.jsx","components/PokemonListSection/index.jsx","components/PokemonDetailsCard/index.jsx","pages/PokedexPage/index.jsx","App.js","serviceWorker.js","index.js","components/PokemonItem/styles.module.scss","components/PokemonSearch/styles.module.scss","components/PokemonDetailsCard/styles.module.scss","components/LoadMoreButton/styles.module.scss"],"names":["module","exports","title","spinner","Title","react_default","a","createElement","className","styles","React","Component","PokemonItem","CircularProgress_default","PokemonAPIClient","limit","offset","axios","get","concat","params","id","type","upperCaseFirstLetter","str","charAt","toUpperCase","slice","extractIDFromPokemonUrl","url","fragments","split","length","state","avatar","name","types","isLoading","_this2","this","getPokemonByID","props","then","response","setState","data","sprites","front_default","_this$state","_this$props","onItemClick","Spinner","Card_default","card","onClick","Avatar_default","src","map","typeObj","index","Chip_default","key","chip","label","PokemonList","pokemons","Grid_default","container","spacing","pokemon","xs","sm","md","item","components_PokemonItem","LoadMoreButton","disabled","buttonWrapper","Button_default","button","variant","color","PokemonSearch","typeValue","handleChange","event","_this","target","value","form","TextField_default","textField","margin","onChange","DEFAULT_LIMIT","PokemonListSection","isButtonDisabled","filteredPokemons","undefined","handleClick","Object","toConsumableArray","getPokemonList","results","count","handleSearchClick","getPokemonsByType","toLowerCase","onSearchClick","Fragment","components_PokemonSearch","components_PokemonList","components_LoadMoreButton","PokemonDetailsCard","_this3","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","renderStats","renderWeight","renderTotalMoves","stats","statObj","stat","component","scope","base_stat","weight","moves","Table_default","renderTableHeader","renderTableBody","PokedexPage","open","handleItemClick","closeDrawer","components_Title","isMobile","SwipeableDrawer_default","onOpen","onClose","components_PokemonDetailsCard","components_PokemonListSection","withSizes","_ref","width","App","pages_PokedexPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","pokemonList"],"mappings":"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","file":"static/js/main.5c1183ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__7DKQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"styles_spinner__3cwmT\"};","import React from 'react';\nimport styles from './styles.module.scss';\n\nclass Title extends React.Component {\n    render() {\n        return <div className={styles.title}>Pokedex</div>;\n    }\n}\n\nexport default Title;","import React from 'react';\n\nimport styles from './styles.module.scss';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass PokemonItem extends React.Component {\n  render() {\n    return (\n      <div className={styles.spinner}>\n        <CircularProgress />\n      </div>\n    );\n  }\n}\n\nexport default PokemonItem;\n","import axios from 'axios';\n\nconst POKEMON_API_URL = 'https://pokeapi.co/api/v2/';\n\nclass PokemonAPIClient {\n  static getPokemonList(limit, offset) {\n    return axios.get(`${POKEMON_API_URL}pokemon/`, {\n      params: {\n        limit,\n        offset,\n      }\n    });\n  }\n\n  static getPokemonByID(id) {\n    return axios.get(`${POKEMON_API_URL}pokemon/${id}/`);\n  }\n\n  static getPokemonsByType(type) {\n    return axios.get(`${POKEMON_API_URL}type/${type}/`);\n  }\n}\n\nexport default PokemonAPIClient;","export function upperCaseFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function extractIDFromPokemonUrl(url) {\n  const fragments = url.split('/');\n\n  return fragments[fragments.length - 2];\n}\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\n\nimport Spinner from '../Spinner';\nimport PokemonAPIClient from '../../lib/PokemonAPIClient';\nimport { upperCaseFirstLetter } from '../../lib/utils';\n\nimport styles from './styles.module.scss';\n\nclass PokemonItem extends React.Component {\n  state = {\n    avatar: '',\n    name: '',\n    types: [],\n    isLoading: true\n  };\n\n  componentDidMount() {\n    PokemonAPIClient.getPokemonByID(this.props.id)\n      .then(response => (\n        this.setState({\n          avatar: response.data.sprites.front_default,\n          name: response.data.name,\n          types: response.data.types,\n          isLoading: false,\n        })\n      ));\n  }\n\n  render() {\n    const { avatar, name, types, isLoading } = this.state;\n    const { id, onItemClick } = this.props;\n\n    if (isLoading) {\n      return <Spinner />;\n    }\n\n    return (\n        <Card\n          className={styles.card} \n          onClick={() => onItemClick(id)}\n        >\n          <Avatar\n            className={styles.avatar}\n            src={avatar} \n          />\n\n          <h3 className={styles.name}>\n            {upperCaseFirstLetter(name)}\n          </h3>\n          \n          {types.map((typeObj, index) => (\n            <Chip key={index} className={styles.chip} label={typeObj.type.name} />\n          ))}\n        </Card>\n    );\n  }\n}\n\nexport default PokemonItem;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport PokemonItem from '../PokemonItem';\nimport { extractIDFromPokemonUrl } from '../../lib/utils';\n\nclass PokemonList extends React.Component {\n  render() {\n    const { pokemons, onItemClick } = this.props;\n\n    return (\n      <Grid container spacing={24}>\n        {pokemons.map(pokemon => (\n          <Grid key={pokemon.name} xs={12} sm={6} md={4} item>\n            <PokemonItem\n              id={extractIDFromPokemonUrl(pokemon.url)}\n              onItemClick={onItemClick}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    );\n  }\n}\n\nexport default PokemonList;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nimport styles from './styles.module.scss';\n\nclass LoadMoreButton extends React.Component {\n  render() {\n    const { disabled, onClick } = this.props;\n\n    return (\n      <Grid container>\n        <Grid xs={12} item>\n          <div className={styles.buttonWrapper}>\n            <Button\n              className={styles.button}\n              disabled={disabled}\n              variant=\"contained\" \n              color=\"primary\" \n              onClick={onClick}\n            >\n              Load More\n            </Button>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default LoadMoreButton;","import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport styles from './styles.module.scss';\n\nclass PokemonSearch extends React.Component {\n  state = {\n    typeValue: '',\n  };\n\n  handleChange = event => {\n    this.setState({\n      typeValue: event.target.value\n    });\n  }\n\n  render() {\n    const { typeValue } = this.state;\n    const { onClick } = this.props;\n\n    return (\n      <div className={styles.form}>\n        <TextField\n          id=\"outlined-search\"\n          type=\"search\"\n          className={styles.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n          value={typeValue}\n          onChange={this.handleChange}\n        />\n\n        <Button\n          className={styles.button}\n          variant=\"contained\" \n          color=\"primary\" \n          onClick={() => onClick(typeValue)}            \n        >\n          Search pokemons by type\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default PokemonSearch;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport PokemonList from '../PokemonList';\nimport LoadMoreButton from '../LoadMoreButton';\nimport PokemonSearch from '../PokemonSearch';\nimport PokemonAPIClient from '../../lib/PokemonAPIClient';\nimport { extractIDFromPokemonUrl } from '../../lib/utils';\n\nconst DEFAULT_LIMIT = 12;\n\nclass PokemonListSection extends React.Component {\n  state = {\n    pokemons: [],\n    offset: 0,\n    isButtonDisabled: false,\n  };\n\n  filteredPokemons = undefined;\n\n  componentDidMount() {\n    PokemonAPIClient.getPokemonList(DEFAULT_LIMIT, this.state.offset)\n      .then(response => (\n        this.setState(state => ({\n          pokemons: response.data.results,\n          offset: state.offset + DEFAULT_LIMIT,\n        }))\n      ));\n  }\n\n  handleClick = () => {\n    if (this.filteredPokemons) {\n      this.setState(state => ({\n        pokemons: [\n          ...state.pokemons, \n          ...this.filteredPokemons.slice(state.offset, state.offset + DEFAULT_LIMIT)\n        ],\n        offset: state.offset + DEFAULT_LIMIT,\n        isButtonDisabled: state.offset + DEFAULT_LIMIT > this.filteredPokemons.length,\n      }));\n    } else {\n      PokemonAPIClient.getPokemonList(DEFAULT_LIMIT, this.state.offset)\n      .then(response => (\n        this.setState(state => ({\n          pokemons: [...state.pokemons, ...response.data.results],\n          offset: state.offset + DEFAULT_LIMIT,\n          isButtonDisabled: state.offset + DEFAULT_LIMIT > response.data.count,\n        }))\n      ));\n    }\n  }\n\n  handleSearchClick = type => {\n    PokemonAPIClient.getPokemonsByType(type.toLowerCase())\n      .then(response => {\n        this.filteredPokemons = response.data.pokemon.map(pokemon => pokemon.pokemon);\n        this.setState({\n          pokemons: this.filteredPokemons.slice(0, DEFAULT_LIMIT),\n          offset: DEFAULT_LIMIT,\n        }, () => {\n          this.props.onSearchClick(extractIDFromPokemonUrl(this.state.pokemons[0].url));\n        });\n      });\n  }; \n\n  render() {\n    const { pokemons, offset, isButtonDisabled } = this.state;\n    const { onItemClick } = this.props;\n\n    return (\n      <>\n        <Grid container>\n          <Grid xs={2} sm={1} item />\n\n          <Grid xs={8} sm={10} item>\n            <PokemonSearch \n              onClick={this.handleSearchClick}\n            />\n\n            <PokemonList \n              pokemons={pokemons}\n              onItemClick={onItemClick}\n            />\n\n            <LoadMoreButton\n              offset={offset}\n              disabled={isButtonDisabled}\n              onClick={this.handleClick}\n            />\n          </Grid>\n\n          <Grid xs={2} sm={1} item />\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default PokemonListSection;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Spinner from '../Spinner';\nimport PokemonAPIClient from '../../lib/PokemonAPIClient';\nimport { upperCaseFirstLetter } from '../../lib/utils';\n\nimport styles from './styles.module.scss';\n\nclass PokemonDetailsCard extends React.Component {\n  state = {\n    pokemon: {},\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    PokemonAPIClient.getPokemonByID(this.props.id)\n      .then(response => {\n        this.setState({\n          pokemon: response.data,\n          isLoading: false,\n        });\n      });\n  }\n\n  componentDidUpdate() {\n    PokemonAPIClient.getPokemonByID(this.props.id)\n      .then(response => {\n        this.setState({\n          pokemon: response.data,\n          isLoading: false,\n        });\n      });\n  }\n\n  renderTableHeader() {\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell>Type</TableCell>\n          <TableCell align=\"right\">Fire</TableCell>\n        </TableRow>\n      </TableHead>\n    );\n  }\n\n  renderTableBody() {\n    const { pokemon } = this.state;\n\n    return (\n      <TableBody>\n        {this.renderStats(pokemon)}\n        {this.renderWeight(pokemon)}\n        {this.renderTotalMoves(pokemon)}\n      </TableBody>\n    );\n  }\n\n  renderStats(pokemon) {\n    return pokemon.stats.map(statObj => {\n      return (\n        <TableRow key={statObj.stat.url}>\n          <TableCell component=\"th\" scope=\"row\">\n            {upperCaseFirstLetter(statObj.stat.name)}\n          </TableCell>\n          <TableCell align=\"right\">{statObj.base_stat}</TableCell>\n        </TableRow>\n      );\n    });\n  }\n\n  renderWeight(pokemon) {\n    return (\n      <TableRow>\n        <TableCell component=\"th\" scope=\"row\">\n          Weight\n        </TableCell>\n        <TableCell align=\"right\">{pokemon.weight}</TableCell>\n      </TableRow>\n    );\n  }\n\n  renderTotalMoves(pokemon) {\n    return (\n      <TableRow>\n        <TableCell component=\"th\" scope=\"row\">\n          Total moves\n        </TableCell>\n        <TableCell align=\"right\">{pokemon.moves.length}</TableCell>\n      </TableRow>\n    );\n  }\n\n  render() {\n    const { pokemon, isLoading } = this.state;\n\n    if (isLoading) {\n      return <Spinner />;\n    }\n\n    return (\n      <Grid container>\n        {/* <Grid xs={0} sm={2} item /> */}\n\n        <Grid sm={11} item>\n          <Card className={styles.card}>\n            <Avatar \n              className={styles.avatar}\n              src={pokemon.sprites.front_default} \n            />\n\n            <h3 className={styles.name}>\n              {upperCaseFirstLetter(pokemon.name)}\n            </h3>\n\n            <Table>\n              {this.renderTableHeader()}\n              {this.renderTableBody()}\n            </Table>\n          </Card>\n        </Grid>\n\n        <Grid sm={1} item />\n      </Grid>\n    );\n  }\n}\n\nexport default PokemonDetailsCard;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport withSizes from 'react-sizes';\n\nimport Title from '../../components/Title';\nimport PokemonListSection from '../../components/PokemonListSection';\nimport PokemonDetailsCard from '../../components/PokemonDetailsCard';\n// import styles from './styles.module.scss';\n\nclass PokedexPage extends React.Component {\n  state = {\n    id: 1,\n    open: false,\n  };\n\n  handleItemClick = id => {\n    this.setState(state => ({ \n      id,\n      open: !state.open\n     }));\n  };\n\n  handleSearchClick = id => {\n    this.setState({ id });\n  };\n\n  closeDrawer = () => {\n    this.setState({\n      open: false\n    });\n  };\n\n  render() {\n    const { id } = this.state;\n    \n    return (\n      <>\n        <Title />\n\n        {this.props.isMobile && (\n          <SwipeableDrawer\n            open={this.state.open}\n            onClick={this.closeDrawer}\n            onOpen={() => {}}\n            onClose={() => {}}\n          >\n            <PokemonDetailsCard \n              id={id} \n            />\n          </SwipeableDrawer>\n        )}\n\n        <Grid container>\n          <Grid xs={12} sm={8} item>\n            <PokemonListSection \n              onSearchClick={this.handleSearchClick}\n              onItemClick={this.handleItemClick} \n            />\n          </Grid>\n\n          {!this.props.isMobile && (\n            <Grid sm={4} item>\n              <PokemonDetailsCard id={id} />\n            </Grid>\n          )}\n        </Grid>\n      </>\n    );\n  }\n}\n\nconst mapSizesToProps = ({ width }) => ({\n  isMobile: width < 600,\n})\n\nexport default withSizes(mapSizesToProps)(PokedexPage);\n","import React from 'react';\n\nimport PokedexPage from './pages/PokedexPage';\n\nconst App = () => <PokedexPage />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__1AD5g\",\"avatar\":\"styles_avatar__26M8e\",\"chip\":\"styles_chip__2SjkH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__1DvBY\",\"button\":\"styles_button__27Zk4\",\"textField\":\"styles_textField__3ok5V\",\"pokemonList\":\"styles_pokemonList__a7f1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"styles_avatar__1Eys0\",\"name\":\"styles_name__rRAnT\",\"card\":\"styles_card__3G9AG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__2dN2y\",\"buttonWrapper\":\"styles_buttonWrapper__2xxwX\"};"],"sourceRoot":""}